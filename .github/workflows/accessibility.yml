name: Accessibility Scan & Report to MongoDB

on:
  # Allows triggering via API calls from external services (like n8n)
  repository_dispatch:
    types: [trigger_pa11y_scan]
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      url:
        description: 'URL to scan for accessibility issues'
        required: true
        default: 'https://broken-workshop.dequelabs.com'
      title:
        description: 'Accessibility report'
        required: false
        default: 'Accessibility report'

env:
  N8N_WEBHOOK_URL_RECEIVE: ${{ secrets.N8N_WEBHOOK_URL_RECEIVE_LINA || secrets.N8N_WEBHOOK_URL_RECEIVE_MOHANNED || secrets.N8N_WEBHOOK_URL_RECEIVE_DANIEL }}

jobs:
  accessibility-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Node.js dependencies
        run: |
          npm install # Installs dependencies from package.json (including pa11y)

      - name: Run Pa11y scan and save JSON
        id: run_pa11y
        run: |
          # Define PALLY_TARGET_URL from the trigger payload or default
          PALLY_TARGET_URL="${{ github.event.client_payload.url || github.event.inputs.url || 'https://www.google.com' }}"
          # Define PALLY_TARGET_TITLE from the trigger payload or default
          PALLY_TARGET_TITLE="${{ github.event.client_payload.title || github.event.inputs.title || '' }}"
          
          # Debugging: Print the URL and Title to the GitHub Actions log
          echo "DEBUG: Attempting to scan URL: $PALLY_TARGET_URL" 
          echo "DEBUG: Using custom title: $PALLY_TARGET_TITLE"
          
          # Execute your Node.js wrapper, passing the dynamically determined URL and Title.
          node pa11y-wrapper.js "$PALLY_TARGET_URL" "$PALLY_TARGET_TITLE" > pa11y-results.json

      - name: Upload Pa11y raw JSON as artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: pa11y-raw-json
          path: pa11y-results.json
          retention-days: 7

      - name: Send Pa11y JSON report to n8n
        run: |
          curl -X POST \
          -H "Content-Type: application/json" \
          --data-binary @pa11y-results.json \
          "${{ env.N8N_WEBHOOK_URL_RECEIVE }}" # <--- THIS NOW USES THE SECRET VIA ENV
